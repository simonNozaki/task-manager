buildscript {
    ext {
        springBootVersion = '1.5.15.RELEASE'
        mybatisGeneratorVersion = '1.3.5'
        kotlin_version = '1.3.21'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'postgresql:postgresql:9.1-901.jdbc4'
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.1.4"

    // Kotlin JVM対応
    id "org.jetbrains.kotlin.jvm" version '1.3.21'
    id "org.jetbrains.kotlin.plugin.noarg" version '1.3.21'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

def appName = 'parallel-api'

group = 'com.tm'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
    mybatisGenerator
}

/**
 * 引数なしコンストラクタ宣言アノテーション
 */
noArg {
    annotation("com.tm.config.Data")
}


//----------------------------------------------------
// compile設定
//----------------------------------------------------

/**
 * 対象リソースの指定
 */
sourceSets {
    main.java.srcDirs += "src/main/java"
    main.kotlin.srcDirs += "src/main/kotlin"
    main.resources.srcDirs += "src/main/resources"
}

/**
 * warの名前を指定
 */
war {
    archiveName = appName + '.war'
}


//----------------------------------------------------
// Maven依存ライブラリ
//----------------------------------------------------

dependencies {
    /**
     *Spring boot
     */
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '1.5.15.RELEASE'
    runtime('org.springframework.boot:spring-boot-devtools')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    /**
     * Spring Security
     */
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.0.10.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.0.10.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.0.10.RELEASE'


    /**
     * Mybatis
     */
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-maven-plugin', version: '1.3.7'
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
    mybatisGenerator group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: mybatisGeneratorVersion

    /**
     * flyway-gradle-plugin
     */
    compile group: 'org.flywaydb', name: 'flyway-gradle-plugin', version: '5.1.4'

    /**
     * Logback
     */
    compile 'ch.qos.logback:logback-classic:1.2.3'

    /**
     * PostgreSQL
     */
    runtime('org.postgresql:postgresql')
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'

    /**
     * spring-mvc-logger
     */
    compile(group: 'com.github.isrsal', name: 'spring-mvc-logger', version:'0.2') {
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
        exclude module: 'servlet-api'
        exclude module: 'spring-webmvc'
    }

    // lib フォルダ以下、サブフォルダも含めて全 jar ファイルを指定
    compile fileTree(dir: '/Users/SimonNozaki/.gradle/caches/modules-2/files-2.1', include: '**/*.jar')

    /**
     * Kotlin関連ライブラリ
     */
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.3.21'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.21'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.7'

    /**
     * Test Tools
     */
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')

    /**
     * Apache Commons Lang
     */
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

/**
 * Mybatis generatorのタスクです.
 */
task mybatisGenerator {
    doLast {
        ant.taskdef(name: 'mbgenerator',
                classname: 'org.mybatis.generator.ant.GeneratorAntTask',
                classpath: configurations.mybatisGenerator.asPath)
        ant.mbgenerator(overwrite: true,
                configfile: 'src/main/resources/generatorConfig.xml',
                verbose: true)
    }
}

mybatisGenerator.group = 'mybatis'


//----------------------------------------------------
// Flyway設定
//----------------------------------------------------

/**
 * Flyway migration のタスク。ローカルの開発環境用。
 */
flyway {
    driver='org.postgresql.Driver'
    url = 'jdbc:postgresql://localhost:5532/task_base?autoReconnect=true&useSSL=false&characterEncoding=utf8'
    user = 'taskmanageruser'
    password = 'taskmanageruser'
    baselineVersion = 1
    baselineDescription = 'マイグレーション初版です.';
}

/**
 * Gradleの親ディレクトリを検出します.
 */
task getGradleHomeDir {
    doLast {
        println gradle.gradleHomeDir
    }
}

/**
 * Flyway Migrationタスク、UTDB用。
 */
task migrateUtdb(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    driver='org.postgresql.Driver'
    url = 'jdbc:postgresql://localhost:15532/ut_task_base?autoReconnect=true&useSSL=false&characterEncoding=utf8'
    user = 'taskmanageruser'
    password = 'taskmanageruser'
    baselineVersion = 1
    baselineDescription = 'マイグレーション初版です.'
}

//----------------------------------------------------
// アプリ実行
//----------------------------------------------------
/**
 * gradle bootRunのプロファイル指定。
 */
def profiles = 'dev'
